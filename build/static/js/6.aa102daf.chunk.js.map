{"version":3,"sources":["redux/contacts/contactSelectors.js","redux/contacts/contactsOperations.js","components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItemStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/section/SectionStyled.js","components/section/Section.js","pages/ContactsPage.js"],"names":["getContacts","state","contacts","items","getLoading","loading","getFilteredContacts","createSelector","filter","name","toLowerCase","includes","axios","defaults","baseURL","ContactFormStyled","styled","div","ContactForm","number","handleInputChange","event","currentTarget","value","setState","onHandleSubmit","e","preventDefault","contact","props","find","alert","onSubmit","this","fetchContacts","className","fontSize","style","color","onChange","type","pattern","title","required","Component","connect","dispatch","getState","a","addContactRequest","idToken","auth","tokens","localId","user","post","data","addContactSuccess","id","addContactError","message","addContact","getContactRequest","get","getContactSuccess","Object","keys","map","key","getContactError","ContactListItemStyled","ContactListItem","onDeleteContact","onClick","Delete","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","FilterStyled","mapDispatchToProps","setFilter","target","SectionStyled","section","Section","children","toUpperCase","ContactsPage"],"mappings":"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","file":"static/js/6.aa102daf.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getAllContacts = (state) => state.contacts.items;\nexport const getLoading = (state) => state.contacts.loading;\nexport const getError = (state) => state.contacts.error;\n\nexport const getFilteredContacts = createSelector([getAllContacts, getFilter], (contacts, filter) => {\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n});\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactError,\n  addContactSuccess,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  getContactRequest,\n  getContactSuccess,\n  getContactError,\n} from \"./contactActions\";\n\naxios.defaults.baseURL = \"https://phonebook-5b0f2-default-rtdb.firebaseio.com\"; //users/{userId}/contacts.json?auth={idToken}\n\nexport const fetchContacts = () => async (dispatch, getState) => {\n  dispatch(getContactRequest());\n  const {\n    auth: {\n      tokens: { idToken },\n    },\n    user: { localId }, //state.auth.localId \\ idToken\n  } = getState();\n\n  try {\n    const { data } = await axios.get(`/users/${localId}/contacts.json?auth=${idToken}`);\n\n    dispatch(getContactSuccess(data ? Object.keys(data).map((key) => ({ id: key, ...data[key] })) : []));\n  } catch (error) {\n    dispatch(getContactError(error.message));\n  }\n};\nexport const addContact = (contact) => async (dispatch, getState) => {\n  dispatch(addContactRequest());\n  const {\n    auth: {\n      tokens: { idToken },\n    },\n    user: { localId },\n  } = getState();\n  try {\n    const { data } = await axios.post(`/users/${localId}/contacts.json?auth=${idToken}`, contact);\n    dispatch(addContactSuccess({ id: data.name, ...contact }));\n  } catch (error) {\n    dispatch(addContactError(error.message));\n  }\n};\n\nexport const deleteContact = (id) => async (dispatch, getState) => {\n  dispatch(deleteContactRequest());\n  const {\n    auth: {\n      tokens: { idToken },\n    },\n    user: { localId },\n  } = getState();\n  try {\n    await axios.delete(`/users/${localId}/contacts/${id}.json?auth=${idToken}`);\n    dispatch(deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(deleteContactError(error.message));\n  }\n};\n","import styled from \"styled-components\";\n\nexport const ContactFormStyled = styled.div`\n  padding: 25px 15px;\n  margin: 10px;\n  border: 1px solid;\n  border-radius: 5px;\n  width: 400px;\n  .inputName {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    display: block;\n    background-color: lightgrey;\n  }\n  .btnAdd {\n    display: block;\n    margin-top: 30px;\n    padding: 3px 5px;\n    border-radius: 6px;\n    cursor: pointer;\n    color: #fff;\n    background-color: transparent;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n  .label {\n    /* background-color: lightgrey; */\n    font-weight: bold;\n    padding: 5px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contactSelectors\";\nimport { addContact, fetchContacts } from \"../../redux/contacts/contactsOperations\";\nimport { ContactFormStyled } from \"./ContactFormStyled\";\nimport AccessibilityNewIcon from \"@material-ui/icons/AccessibilityNew\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    const sameContact = this.props.contacts.find(\n      (contact) => contact.name.toLowerCase() === this.state.name.toLowerCase()\n    );\n    if (sameContact) {\n      return alert(`${this.state.name} is already exists in the Phonebook`);\n    }\n\n    this.props.onSubmit(contact);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <ContactFormStyled>\n        <form onSubmit={this.onHandleSubmit}>\n          <label className=\"label\">\n            <AccessibilityNewIcon fontSize=\"small\" style={{ color: \"green\" }} />\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleInputChange}\n              type=\"text\"\n              name=\"name\"\n              className=\"inputName\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т.п.\"\n              required\n            />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              className=\"inputName\"\n              value={this.state.number}\n              onChange={this.handleInputChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять из цифр, может содержать пробелы, тире, круглые скобки и начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className=\"btnAdd\">\n            Add contact\n          </button>\n        </form>\n      </ContactFormStyled>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: getContacts(state),\n  // contacts: state.contacts.items,\n  // filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (contact) => dispatch(addContact(contact)),\n  fetchContacts: () => dispatch(fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styled from \"styled-components\";\n\nexport const ContactListItemStyled = styled.div`\n  /* border: 1px solid #fff; */\n  border-radius: 5px;\n  margin-bottom: 3px;\n  background-color: transparent;\n  font-weight: bold;\n  .btnDelete {\n    padding: 3px;\n    margin: 3px;\n    border-radius: 7px;\n    background-color: transparent;\n    cursor: pointer;\n    &:hover {\n      background-color: cornflowerblue;\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListItemStyled } from \"./ContactListItemStyled\";\nimport { Delete } from \"@material-ui/icons\";\n\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\n  const onDeleteItem = () => {\n    onDeleteContact(id);\n  };\n\n  return (\n    <ContactListItemStyled>\n      <li>\n        {name}\n        <span>: </span>\n        {number}\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\n          <Delete color=\"disabled\" fontSize=\"small\" style={{ color: \"darkred\" }} />\n        </button>\n      </li>\n    </ContactListItemStyled>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./contactListItem/ContactListItem\";\nimport { connect } from \"react-redux\";\nimport { getFilteredContacts, getLoading } from \"../../redux/contacts/contactSelectors\";\nimport { deleteContact } from \"../../redux/contacts/contactsOperations\";\n\nconst ContactList = ({ contacts, filter, onDeleteContact }) => {\n  return (\n    <ol>\n      {contacts\n        .filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map((contact) => (\n          <ContactListItem key={contact.id} {...contact} onDeleteContact={onDeleteContact} />\n        ))}\n    </ol>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: getFilteredContacts(state),\n  filter: state.contacts.filter,\n  loading: getLoading(state),\n});\n\nexport default connect(mapStateToProps, { onDeleteContact: deleteContact })(ContactList);\n","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\n  margin-left: 10px;\n  .inputFilter {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FilterStyled } from \"./FilterStyled\";\nimport { connect } from \"react-redux\";\nimport { setFilter } from \"../../redux/contacts/contactActions\";\n\nconst Filter = ({ setFilter, filter }) => {\n  return (\n    <FilterStyled>\n      <label className=\"labelFilter\">\n        Find contacts by name:\n        <input\n          className=\"inputFilter\"\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)}\n        />\n      </label>\n    </FilterStyled>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: state.filter,\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   handleInputChange: (e) => dispatch(setFilter(e.target.value)),\n// });\n\nconst mapDispatchToProps = {\n  setFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  setFilter: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const SectionStyled = styled.section`\n  .sectionTitle {\n    color: cornflowerblue;\n    margin: 20px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { SectionStyled } from \"./SectionStyled\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <SectionStyled>\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport ContactForm from \"../components/contactForm/ContactForm\";\nimport ContactList from \"../components/contactList/ContactList\";\nimport Filter from \"../components/filter/Filter\";\nimport Section from \"../components/section/Section\";\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Filter />\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"sourceRoot":""}