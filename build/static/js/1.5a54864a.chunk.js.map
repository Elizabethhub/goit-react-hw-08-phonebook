{"version":3,"sources":["services/auth_api.js","components/auth/AuthStyled.js","images/icons/sprite.svg","components/auth/Auth.js","redux/auth/authOperation.js","pages/AuthPage.js"],"names":["API_KEY","register_URL","login_URL","register","user","a","axios","post","returnSecureToken","response","registerData","data","login","loginData","console","log","AuthContainer","styled","div","Auth","state","email","password","onHandleChange","e","target","name","value","setState","onHandleSubmit","preventDefault","props","location","pathname","registerUserOperation","loginUserOperation","prevProps","prevState","this","error","alert","onSubmit","className","autoComplete","type","onChange","placeholder","minLength","required","href","sprite","Component","connect","auth","dispatch","registerUserRequest","registerUserSuccess","registerUserError","message","loginUserRequest","loginUserSuccess","loginUserError","withRouter","AuthPage"],"mappings":"qQACMA,EAAU,0CACVC,EAAY,wEAAoED,GAChFE,EAAS,oFAAgFF,GAGzFG,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEUC,IAAMC,KAAKN,EAAX,2BAClBG,GADkB,IAErBI,mBAAmB,KAJR,cAEPC,EAFO,yBASN,CACLC,aAAcD,EAASE,OAVZ,oGAAH,sDAiBRC,EAAK,uCAAG,WAAOR,GAAP,eAAAC,EAAA,+EAEaC,IAAMC,KAAKL,EAAX,2BAClBE,GADkB,IAErBI,mBAAmB,KAJX,cAEJC,EAFI,yBAMH,CAAEI,UAAWJ,EAASE,OANnB,gCAQVG,QAAQC,IAAR,MARU,yDAAH,sD,eCrBEC,E,MAAgBC,EAAOC,IAAV,omCCFX,MAA0B,mC,cCOnCC,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAWZC,eAAiB,SAACC,GAChB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,eAAiB,SAACL,GAChBA,EAAEM,iBAC+B,YAAjC,EAAKC,MAAMC,SAASC,SAChB,EAAKF,MAAMG,sBAAsB,EAAKd,OACtC,EAAKW,MAAMI,mBAAmB,EAAKf,Q,wDAjBzC,SAAmBgB,EAAWC,GAC5B,GAAIC,KAAKP,MAAMQ,QAAUH,EAAUG,OACR,wCAArBD,KAAKP,MAAMQ,MACb,OAAOC,MAAM,GAAD,OAAIF,KAAKlB,MAAMC,MAAf,0C,oBAgBlB,WACE,IAAQY,EAAaK,KAAKP,MAAMC,SAAxBC,SACR,EAA4BK,KAAKlB,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,cAACN,EAAD,UACE,uBAAMyB,SAAUH,KAAKT,eAAgBa,UAAU,YAAYC,aAAa,MAAMjB,KAAK,WAAnF,UACE,wBAAOgB,UAAU,aAAjB,kBAEE,uBACEE,KAAK,OACLlB,KAAK,QACLmB,SAAUP,KAAKf,eACfI,MAAON,EACPqB,UAAU,aACVI,YAAY,gBACZC,UAAU,IACVJ,aAAa,KACbK,UAAQ,IAEV,qBAAKN,UAAU,YAAf,SACE,qBAAKO,KAAMC,EAAS,uBAGxB,wBAAOR,UAAU,aAAjB,qBAEE,uBACEE,KAAK,OACLlB,KAAK,WACLmB,SAAUP,KAAKf,eACfI,MAAOL,EACPoB,UAAU,aACVM,UAAQ,EACRF,YAAY,iBACZH,aAAa,OAEf,qBAAKD,UAAU,YAAf,SACE,qBAAKO,KAAMC,EAAS,oBAGxB,wBAAQN,KAAK,SAASF,UAAU,cAAhC,SACgB,YAAbT,EAAyB,WAAa,mB,GAjEhCkB,aA6EJC,eAJS,SAAChC,GAAD,MAAY,CAClCmB,MAAOnB,EAAMiC,KAAKd,SAGoB,CAAEL,sBCzEZ,SAAC9B,GAAD,8CAAU,WAAOkD,GAAP,eAAAjD,EAAA,6DACtCiD,EAASC,eAD6B,kBAGbpD,EAASC,GAHI,OAG9BK,EAH8B,OAIpC6C,EAASE,YAAoB/C,EAASC,eAJF,gDAOpC4C,EAASG,YAAkB,KAAMC,UAPG,yDAAV,uDDyEmCvB,mBC/DtC,SAAC/B,GAAD,8CAAU,WAAOkD,GAAP,eAAAjD,EAAA,6DACnCiD,EAASK,eAD0B,kBAGV/C,EAAMR,GAHI,OAG3BK,EAH2B,OAIjC6C,EAASM,YAAiBnD,EAASI,YAJF,gDAMjCyC,EAASO,YAAe,KAAMH,UANG,yDAAV,wDD+DZN,CAAwEU,YAAW3C,IExEnF4C,UATE,WACf,OACE,qCACE,0CACA,cAAC,EAAD","file":"static/js/1.5a54864a.chunk.js","sourcesContent":["import axios from \"axios\";\nconst API_KEY = \"AIzaSyB_JpT834A0PunyVmEpcWWSkqqSL-_OpXM\";\nconst register_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\nconst login_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\n// const baseURL = `https://phonebook-5b0f2-default-rtdb.firebaseio.com`;\n\nconst register = async (user) => {\n  try {\n    const response = await axios.post(register_URL, {\n      ...user,\n      returnSecureToken: true,\n    });\n    // const addUserToDB = await axios.post(baseURL + \"/phonebookUsers.json\", {\n    //   email: user.email,\n    // });\n    return {\n      registerData: response.data,\n      // id: addUserToDB.data.name\n    };\n  } catch (error) {\n    throw error;\n  }\n};\nconst login = async (user) => {\n  try {\n    const response = await axios.post(login_URL, {\n      ...user,\n      returnSecureToken: true,\n    });\n    return { loginData: response.data };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { register, login };\n","import styled from \"styled-components\";\n\nexport const AuthContainer = styled.div`\n  .user-form {\n    display: flex;\n    flex-direction: column;\n    width: 280px;\n    padding: 10px;\n    border: 1px solid lightgray;\n    border-radius: 16px;\n  }\n  .user-label {\n    position: relative;\n    margin-bottom: 8px;\n    padding-top: 6px;\n  }\n  .user-input {\n    height: 30px;\n    width: 100%;\n    outline: none;\n    padding-left: 8px;\n    height: 30px;\n    border: 1px solid cornflowerblue;\n    border-radius: 5px;\n  }\n  .user-input:focus + .icon-user,\n  .user-input:not(:placeholder-shown) + .icon-user {\n    opacity: 0;\n  }\n  .user-input:not(:placeholder-shown)::placeholder {\n    opacity: 0;\n  }\n  .user-input:focus::placeholder {\n    opacity: 0;\n  }\n  .user-input::placeholder {\n    color: cornflowerblue;\n    padding-left: 25px;\n    font-size: 14px;\n    transition: opacity 300ms linear;\n  }\n  .icon-user {\n    position: absolute;\n    bottom: 10px;\n    left: 14px;\n    width: 12px;\n    height: 12px;\n    fill: cornflowerblue;\n    transition: opacity 300ms linear;\n  }\n  .user-button {\n    align-self: center;\n    width: 120px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/sprite.5b013346.svg\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginUserOperation, registerUserOperation } from \"../../redux/auth/authOperation\";\nimport { AuthContainer } from \"./AuthStyled\";\nimport sprite from \"../../images/icons/sprite.svg\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Auth extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.error !== prevProps.error) {\n      if (this.props.error === \"Request failed with status code 400\") {\n        return alert(`${this.state.email} is already exists in the Phonebook`);\n      }\n    }\n  }\n\n  onHandleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = (e) => {\n    e.preventDefault();\n    this.props.location.pathname === \"/signup\"\n      ? this.props.registerUserOperation(this.state)\n      : this.props.loginUserOperation(this.state);\n  };\n  render() {\n    const { pathname } = this.props.location;\n    const { email, password } = this.state;\n    return (\n      <AuthContainer>\n        <form onSubmit={this.onHandleSubmit} className=\"user-form\" autoComplete=\"off\" name=\"userForm\">\n          <label className=\"user-label\">\n            Email\n            <input\n              type=\"text\"\n              name=\"email\"\n              onChange={this.onHandleChange}\n              value={email}\n              className=\"user-input\"\n              placeholder=\"max@gmail.com\"\n              minLength=\"3\"\n              autoComplete=\"on\"\n              required\n            />\n            <svg className=\"icon-user\">\n              <use href={sprite + \"#icon-envelop\"} />\n            </svg>\n          </label>\n          <label className=\"user-label\">\n            Password\n            <input\n              type=\"text\"\n              name=\"password\"\n              onChange={this.onHandleChange}\n              value={password}\n              className=\"user-input\"\n              required\n              placeholder=\"AbraCadabra555\"\n              autoComplete=\"on\"\n            />\n            <svg className=\"icon-user\">\n              <use href={sprite + \"#icon-lock\"} />\n            </svg>\n          </label>\n          <button type=\"submit\" className=\"user-button\">\n            {pathname === \"/signup\" ? \"Register\" : \"Login\"}\n          </button>\n        </form>\n      </AuthContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  error: state.auth.error,\n});\n\nexport default connect(mapStateToProps, { registerUserOperation, loginUserOperation })(withRouter(Auth));\n","import { login, register } from \"../../services/auth_api\";\n// import { addUser } from \"../users/usersActions\";\nimport {\n  loginUserError,\n  loginUserRequest,\n  loginUserSuccess,\n  registerUserError,\n  registerUserRequest,\n  registerUserSuccess,\n} from \"./authActions\";\n\nconst registerUserOperation = (user) => async (dispatch) => {\n  dispatch(registerUserRequest());\n  try {\n    const response = await register(user);\n    dispatch(registerUserSuccess(response.registerData));\n    // dispatch(addUser({ ...user, id: response.id }));\n  } catch (error) {\n    dispatch(registerUserError(error.message));\n  }\n};\nconst loginUserOperation = (user) => async (dispatch) => {\n  dispatch(loginUserRequest());\n  try {\n    const response = await login(user);\n    dispatch(loginUserSuccess(response.loginData));\n  } catch (error) {\n    dispatch(loginUserError(error.message));\n  }\n};\n\nexport { registerUserOperation, loginUserOperation };\n","import React from \"react\";\nimport Auth from \"../components/auth/Auth\";\n\nconst AuthPage = () => {\n  return (\n    <>\n      <h2>AuthPage</h2>\n      <Auth />\n    </>\n  );\n};\n\nexport default AuthPage;\n"],"sourceRoot":""}